appId: com.dMind.desktop
productName: dMind
directories:
  buildResources: build
files:
  - '!**/.vscode/*'
  - '!**/node_modules/**/{CONTRIBUTORS,CNAME,AUTHOR,TODO,CONTRIBUTING,COPYING,INSTALL,NEWS,PORTING,Makefile,htdocs,CHANGELOG,ChangeLog,changelog,README,Readme,readme,test,sample,example,demo,composer.json,tsconfig.json,jsdoc.json,tslint.json,typings.json,gulpfile,bower.json,package-lock,Gruntfile,CMakeLists,karma.conf,yarn.lock}*'
  - '!**/node_modules/**/{man,benchmark,spec,cmake,browser,vagrant,doxy*,bin,obj,obj.target,example,examples,test,tests,doc,docs,msvc,Xcode,CVS,RCS,SCCS}{,/**/*}'
  - '!**/node_modules/**/*.{conf,png,pc,coffee,txt,spec.js,ts,js.flow,html,def,jst,xml,ico,in,ac,sln,dsp,dsw,cmd,vcproj,vcxproj,vcxproj.filters,pdb,exp,obj,lib,map,md,sh,gypi,gyp,h,cpp,yml,log,tlog,Makefile,mk,c,cc,rc,xcodeproj,xcconfig,d.ts,yaml,hpp}'
  - '!**/node_modules/**!(dom-to-image).min.js'
  - '!**/node_modules/!(serialport|xpc-connection|unix-dgram|mraa)/build{,/**/*}'
  - '!**/node_modules/**/node-v*-x64{,/**/*}'
  - '!**/node_modules/contextify{,/**/*}'
  - '!**/node_modules/jsdom{,/**/*}'
  - '!**/node_modules/babe-runtime{,/**/*}'
  - '!**/node_modules/bluebird/js/browser{,/**/*}'
  - '!**/node_modules/xterm/dist{,/**/*}'
  - '!**/node_modules/source-map/dist{,/**/*}'
  - '!**/node_modules/lodash/fp{,/**/*}'
  - '!**/node_modules/moment/src{,/**/*}'
  - '!**/node_modules/moment/min{,/**/*}'
  - '!**/node_modules/moment/locale/!(fr.js|en.js|ja.js)'
  - '!**/node_modules/async/!(dist|package.json)'
  - '!**/node_modules/async/internal{,/**/*}'
  - '!**/node_modules/ajv/dist{,/**/*}'
  - '!**/node_modules/ajv/scripts{,/**/*}'
  - '!**/node_modules/asn1/tst{,/**/*}'
  - '!**/node_modules/axios/lib{,/**/*}'
  - '!**/node_modules/axios/!(index.js|package.json)'
  - '!**/node_modules/axios/dist/axios.min.js'
  - '!**/node_modules/bluebird/js/browser{,/**/*}'
  - '!**/node_modules/dom-to-image/src{,/**/*}'
  - '!**/node_modules/xterm/src{,/**/*}'
  - '!**/node_modules/qs/dist{,/**/*}'
  - '!**/node_moduleslog4js/logs{,/**/*}'
  - '!**/node_modulesi18next/!(index.js|package.json|dist)'
  - '!**/node_modulesi18next/dist/!(commonjs)'
  - '!**/node_modules/viewport-dimensions/dist{,/**/*}'
  - '!**/node_modules/validator/!(lib|index.js|package.json|validator.js)'
  - '!**/node_modules/moment-timezone/builds{,/**/*}'
  - '!**/node_modules/moment-timezone/data/meta{,/**/*}'
  - '!**/node_modules/moment-timezone/data/unpacked{,/**/*}'
  - '!**/node_modules/node-pre-gyp/!(lib|package.json)'
  - '!**/node_modules/node-pre-gyp/lib/!(util|pre-binding.js|node-pre-gyp.js)'
  - '!**/node_modules/node-pre-gyp/lib/util/!(versioning.js|abi_crosswalk.json)'
  - '!**/node_modules/ssh2/util{,/**/*}'
  - '!**/node_modules/source-map-support/browser-source-map-support.js'
  - '!**/node_modules/usb/!(package.json|src)'
  - '!**/node_modules/opencv/!(package.json|lib)'
  - '!**/node_modules/json-schema/!(package.json|lib)'
  - '!**/node_modules/hawk/dist/{,/**/*}'
  - '!**/node_modules/hawk/lib/browser.js'
  - '!git_assets'
  - '!src/*'
  - '!electron.vite.config.{js,ts,mjs,cjs}'
  - '!{.eslintignore,.eslintrc.js,.prettierignore,.prettierrc.yaml,dev-app-update.yml,CHANGELOG.md,README.md,CODE_OF_CONDUCT.md}'
  - '!{.env,.env.*,.npmrc,pnpm-lock.yaml}'
  - '!{tsconfig.json,tsconfig.node.json,tsconfig.web.json}'
asarUnpack:
  - resources/**
win:
  target: 'nsis'
  executableName: dMind
nsis:
  oneClick: false
  perMachine: true
  license: LICENSE.txt
  allowToChangeInstallationDirectory: true
  artifactName: ${name}-${version}-setup.${ext}
  shortcutName: ${productName}
  uninstallDisplayName: ${productName}
  createDesktopShortcut: always
mac:
  entitlementsInherit: build/entitlements.mac.plist
  extendInfo:
    - NSCameraUsageDescription: Application requests access to the device's camera.
    - NSMicrophoneUsageDescription: Application requests access to the device's microphone.
    - NSDocumentsFolderUsageDescription: Application requests access to the user's Documents folder.
    - NSDownloadsFolderUsageDescription: Application requests access to the user's Downloads folder.
  notarize: false
dmg:
  artifactName: ${name}-${version}.${ext}
linux:
  target:
    - AppImage
    - snap
    - deb
  maintainer: electronjs.org
  category: Utility
appImage:
  artifactName: ${name}-${version}.${ext}
npmRebuild: false
publish:
  provider: generic
  url: https://example.com/auto-updates
